

//test join/aggr/shuffle reducerN, mtst type
select * from t1, mapjoin(disk) t2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, disk) t5, reducejoin(5, disk) t6 group by c1,c2 reduceaggr(12, disk) shuffle(13, disk);
select * from t1, mapjoin(disk) t2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, memory, disk) t5, reducejoin(5, memory) t6 group by c1,c2 reduceaggr(12, memory) shuffle(13, memory);
select * from t1, mapjoin(disk) t2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, memory) t5, reducejoin(5) t6 group by c1,c2 reduceaggr(12) having c1 > 1 shuffle(13);

//test alias parse conflict
select c1 as cc1, c2 from t1, mapjoin(disk) t2 as tt2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, memory) t5, reducejoin(5) t6 reduceaggr(12) shuffle(13);
select c1 as cc1, c2 from t1, mapjoin(disk) t2 as tt2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, memory) t5, reducejoin(5) t6 having c1>1 shuffle(13);
select c1 as cc1, c2 from t1, mapjoin(disk) t2 as tt2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, memory) t5, reducejoin(5) t6 group by c1,c2 shuffle(13);
select c1 as cc1, c2 from t1, mapjoin(disk) t2 as tt2, mapjoin(memory) t3, mapjoin t4, reducejoin(5, disk, memory) t5, reducejoin(5) t6 shuffle(13);

//test +/-/*//... confict
select * from t1 where c1+c2+c3*c4*c5/c6 mod c7 -c8;


//test type flag
select [count(distinct c1, [c2+5]:float)]:int from t1 where [c1+1>c2]:integer;

select c1 from t1 where c1*[c2+c3]:int>10;
select c1 from t1 where c1*c2+[c3]:int>10;

//test mapjoin, reduce join
select * from t1, (select * from t2 where a>b) x1 ,reducejoin(4) (select * from t3 right outer join reducejoin(5) (select * from t4) x5 on t3.c1=x5.c1 ) x2 ,mapjoin t5;

//test shuffle
select my_aggr1(distinct c1+c2) + [my_aggr2(distinct c1)]:decimal + my_aggr2(c3) from t1 order by t1 desc, t2, t3 asc top 123 shuffle(12);


select max(c1) from t1;

select count(*) from t1;
select count(all *) from t1;
select count(all c1) from t1;
select count(c1) from t1;
select count(distinct c1) from t1;
select count(distinct c1, c2) from t1;
select count(distinct c1, c2, c3) from t1;


/* /* test bit operator  */ select a && a1 & a2 << 33 >> ~!aa1 << aa2 & a3 | b1 & b2 | c1 && c from t1;
select -1, a + - 3.3e-100,- c1, a+-b from t1;


select a xor/**test XOR  **/ /* */ b or c || d xor e and f xor g and h or i from t1;

//sub-query
select * from t1, (select * from t2 where a>b) x1 , (select * from t3 right outer join (select * from t4) x5 on t3.c1=x5.c1 ) x2 , t5;

//inner-query
select * from t1 where t1.c1 > all(select c1 from t2) and t1.c2<= any(select c1+c2 from t3) and c1+c2=(select count(a1) from t4) and not exists( select * from t5) and c0 not in ( select c1 from t6);


//case when
select * from t1 where case c1 when 1 then c2 when 2+1 then "abc" else (a1 between a2 and a3 + (a4 between 1 and 2)) end;

//interval
select * from t1 where c1-c2 > interval 3 day;


// raw udf, raw UDAF, UDF test...
select my_func1(c1, c1+c2, c2) + my_func2(c1,c2,c3,c4) from t1;

select my_aggr1(distinct c1+c2) + my_aggr2(distinct c1) + my_aggr2(c3) from t1;

select UDF_01(c1, c2, c3)  + UDF_02(c1, c2+c3, c3) from t2;

//inner-query nest sub-query

select * from t1 where c1<( select sum(c1) from (select * from t2 left join t3 on t2.c=t3.c)x1, t3 );

