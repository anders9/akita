package anders.akita.parser;

import anders.akita.parser.ZUtils.AggrDef;

public final class MySQLFunc {
	public static final Object[][] func = {
		//cond
		{"IF",		3},
		{"IFNULL",	2},
		
		//str
		{"ASCII",	1},
		{"BIN",		1},
		{"CHAR_LENGTH", 1},
		{"COMPRESS",	1},
		{"CONCAT", ZExpression.VAR_PARAM},
		{"CONCAT_WS", ZExpression.VAR_PARAM},
		{"CONV", 	3},
		{"ELT",		ZExpression.VAR_PARAM},
		{"EXPORT_SET", ZExpression.VAR_PARAM},
		{"FIELD",	ZExpression.VAR_PARAM},
		{"FIND_IN_SET", 2},
		{"FORMAT",	2},
		{"HEX",		1},
		{"INSTR",	2},
		{"LCASE",	1},
		{"LEFT",	2},  //
		{"LENGTH",		1},
		{"LOCATE",		3},
		{"LOWER",		1},
		{"LPAD",		3},
		{"LTRIM",		1},
		{"MID",			3},
		{"OCT",			1},
		{"OCTET_LENGTH",1},
		{"ORD",			1},
		{"QUOTE",		1},
		{"REPEAT",		1},
		{"REPLACE",		3},
		{"REVERSE",		1},
		{"RIGHT",		2},
		{"RPAD",		3},
		{"RTRIM",		1},
		{"SOUNDEX",		1},
		{"SPACE",		1},
		{"SUBSTRING",	3},//
		{"SUBSTRING_INDEX", 3},
		{"TRIM", 		1},//
		{"UCASE",		1},
		{"UNCOMPRESS",	1},
		{"UNCOMPRESS_LENGTH",1},
		{"UNHEX",		1},
		{"UPPER",		1},
		
		{"ABS",			1},
		{"ACOS",		1},
		{"ASIN",		1},
		{"ATAN",	ZExpression.VAR_PARAM},
		{"CEILING",		1},
		{"COS",			1},
		{"COT",			1},
		{"CRC32",		1},
		{"DEGREES",		1},
		{"EXP",			1},
		{"FLOOR",		1},
		{"FORMAT",		1},
		{"LN",			1},
		{"LOG",	ZExpression.VAR_PARAM},
		{"LOG2",		1},
		{"LOG10",		1},
		{"MOD",			2},
		{"PI",			1},
		{"POW",			2},
		{"RADIANS",		1},
		{"RAND",ZExpression.VAR_PARAM},
		{"ROUND",ZExpression.VAR_PARAM},
		{"SIGN",		1},
		{"SIN",			1},
		{"SQRT",		1},
		{"TAN",			1},
		{"TRUNCATE",	2},
		
		{"ADDDATE",		2},
		{"ADDTIME",		2},
		{"CONVERT_TZ",	3},
		{"CURRENT_DATE",0},
		{"CURTIME",		0},
		{"CURRENT_TIME",0},
		{"CURRENT_TIMESTAMP",0},
		{"DATE",		0},
		{"DATEDIFF",	0},
		{"DATE_ADD",	2},
		{"DATE_SUB",	2},
		{"DATE_FORMAT",	2},
		{"DAY",			1},
		{"DAYNAME",		1},
		{"DAYOFWEEK",	1},
		{"DAYOFYEAR",	1},
		//{"EXTRACT",		
		{"FROM_DAYS",	1},
		{"FROM_UNIXTIME",	ZExpression.VAR_PARAM},
		//{"GET_FORMAT", 
		{"HOUR", 		1},
		{"LAST_DAY",	1},
		{"LOCALTIME",	0},
		{"LOCALTIMESTAMP",0},
		{"MAKEDATE",	2},
		{"MAKETIME",	3},
		{"CROSECOND",	1},
		{"MINUTE",		1},
		{"MONTH",		1},
		{"NOW",			1},
		{"PERIOD_ADD",	2},
		{"PERIOD_DIFF",	2},
		{"QUARTER",		1},
		{"SECOND",		1},
		{"SEC_TO_TIME",	1},
		{"STR_TO_DATE",	2},
		{"SUBDATE",		2},
		{"SUBTIME",		2},
		{"SYSDATE",		0},
		{"TIME",		1},
		{"TIMEDIFF",	2},
		{"TIMESTAMP",	ZExpression.VAR_PARAM},
		{"TIMESTAMPADD",	3},
		{"TIMESTAMPDIFF",	3},
		{"TIME_FORMAT",		2},
		{"TIME_TO_SEC",		1},
		{"TO_DAYS",		1},
		{"UNIX_TIMESTAMP",	ZExpression.VAR_PARAM},
		{"UTC_DATE",	0},
		{"UTC_TIME",	0},
		{"UTC_TIMESTAMP",0},
		{"WEEK",	ZExpression.VAR_PARAM},
		{"WEEKDAY",		1},
		{"WEEKOFYEAR",	1},
		{"YEAR",		1},
		{"YEARWEEK",	ZExpression.VAR_PARAM},
		
		//encrypt
		{"AES_ENCRYPT", 2},
		{"AES_DECRYPT",	2},
		{"ENCODE",		2},
		{"DECODE",		2},
		{"DES_DECRYPT",	ZExpression.VAR_PARAM},
		{"DES_ENCRYPT",	ZExpression.VAR_PARAM},
		{"ENCRYPT",	ZExpression.VAR_PARAM},
		{"MD5",			1},
		{"OLD_PASSWORD",1},
		{"PASSWORD",	1},
		
		//others
		{"FORMAT",		2},
		{"INET_ATON",	1},
		{"INET_NTOA",	1},
		{"UUID",		0},
		
	};
	public static final Object[][] aggr = {
		{"BIT_AND",		 new AggrDef()},
		{"BIT_OR",		 new AggrDef()},
		{"BIT_XOR",		 new AggrDef()},
		{"GROUP_CONCAT", new AggrDef()},
		{"STD",			 new AggrDef()},
		{"STDDEV",		 new AggrDef()},
		{"STDDEV_POP",	 new AggrDef()},
		{"STDDEV_SAMP",	 new AggrDef()},
		{"VAR_POP",		 new AggrDef()},
		{"VAR_SAMP",	 new AggrDef()},
		{"VARIANCE",	 new AggrDef()},
	};
}
